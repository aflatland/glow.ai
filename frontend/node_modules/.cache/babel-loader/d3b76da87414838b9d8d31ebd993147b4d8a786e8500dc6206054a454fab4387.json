{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Annabel\\\\chat-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialMessagesList = [{\n  id: 1,\n  role: \"system\",\n  content: \"You are a friendly Norwegian who speaks A1 Norwegian in order to help beginners improve their Norwegian language skills.\"\n}, {\n  id: 2,\n  role: \"assistant\",\n  content: \"Hei!\"\n}];\nconst username = \"User\";\nconst botname = \"ChatBot\";\nfunction Message({\n  content,\n  name\n}) {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"message\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"message-sender\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), \" \", content]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_c = Message;\nfunction Messages({\n  messages\n}) {\n  _s();\n  const messagesEndRef = useRef(null); // reference val not needed for rendering\n\n  // pin scroll to bottom\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView();\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"messages\",\n    children: [messages.map(msg => msg.role !== \"system\" && /*#__PURE__*/_jsxDEV(Message, {\n      content: msg.content,\n      name: msg.role === \"user\" ? username : botname\n    }, msg.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: messagesEndRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Messages, \"0epSoi03NVSoD0I0FiLK4iVNXOA=\");\n_c2 = Messages;\nfunction SpecialCharacters() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"special-characters-keyboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      class: \"char-key\",\n      children: \"\\xE6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      class: \"char-key\",\n      children: \"\\xF8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      class: \"char-key\",\n      children: \"\\xE5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      class: \"char-key\",\n      children: \"\\xC6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      class: \"char-key\",\n      children: \"\\xD8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      class: \"char-key\",\n      children: \"\\xC5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_c3 = SpecialCharacters;\nfunction MessageBar({\n  onSendMessage\n}) {\n  _s2();\n  const [input, setInput] = useState(\"\");\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSendMessage(input);\n    setInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"messageBar\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"messageBar-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"messageBar-text\",\n        type: \"text\",\n        placeholder: \"Enter Message here...\",\n        autoComplete: \"off\",\n        value: input,\n        onChange: e => setInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"messageBar-send-button\",\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SpecialCharacters, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s2(MessageBar, \"RL+Zbs2TIka0YpcBOJptmHqCgYA=\");\n_c4 = MessageBar;\nfunction CurrentRoomTitle({\n  name\n}) {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    id: \"room-title\",\n    children: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 10\n  }, this);\n}\n_c5 = CurrentRoomTitle;\nfunction CurrentRoom() {\n  _s3();\n  const [chat, setChat] = useState(initialMessagesList);\n\n  // JSON REQUEST TO BACKEND\n  const sendMessage = async message => {\n    // add message to chat\n    const updatedChat = [...chat, {\n      id: chat.length + 1,\n      role: \"user\",\n      content: message\n    }];\n    setChat(updatedChat);\n\n    // get chatbot response from django server\n    // message = user input from input field, set where return is\n    try {\n      const server_response = await fetch(\"http://localhost:8000/chatbot/\", {\n        method: \"POST\",\n        // sending data to server\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          chatsofar: updatedChat\n        }) // can only send JSON\n      });\n\n      // django response is parsed as JSON, and is now a useful JavaScript object?\n      const data = await server_response.json();\n\n      // add resopnse to chat\n      setChat([...updatedChat, {\n        role: \"assistant\",\n        content: data.reply\n      }]);\n    } catch (error) {\n      console.error(\"Error sending message:\", error);\n    }\n  };\n\n  // putting all components together\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"current-room\",\n    children: [/*#__PURE__*/_jsxDEV(CurrentRoomTitle, {\n      name: \"Moby Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Messages, {\n      messages: chat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageBar, {\n      onSendMessage: sendMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n_s3(CurrentRoom, \"zD6e7F0uZJrCY/Uk1WTRFAhsfpg=\");\n_c6 = CurrentRoom;\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(CurrentRoom, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 10\n  }, this);\n}\n_c7 = App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"Message\");\n$RefreshReg$(_c2, \"Messages\");\n$RefreshReg$(_c3, \"SpecialCharacters\");\n$RefreshReg$(_c4, \"MessageBar\");\n$RefreshReg$(_c5, \"CurrentRoomTitle\");\n$RefreshReg$(_c6, \"CurrentRoom\");\n$RefreshReg$(_c7, \"App\");","map":{"version":3,"names":["React","useRef","useState","useEffect","jsxDEV","_jsxDEV","initialMessagesList","id","role","content","username","botname","Message","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Messages","messages","_s","messagesEndRef","_messagesEndRef$curre","current","scrollIntoView","map","msg","ref","_c2","SpecialCharacters","class","_c3","MessageBar","onSendMessage","_s2","input","setInput","handleSubmit","event","preventDefault","onSubmit","type","placeholder","autoComplete","value","onChange","e","target","_c4","CurrentRoomTitle","_c5","CurrentRoom","_s3","chat","setChat","sendMessage","message","updatedChat","length","server_response","fetch","method","headers","body","JSON","stringify","chatsofar","data","json","reply","error","console","_c6","App","_c7","$RefreshReg$"],"sources":["C:/Users/Annabel/chat-app/frontend/src/App.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\n\nconst initialMessagesList = [\n  {\n    id: 1,\n    role: \"system\",\n    content:\n      \"You are a friendly Norwegian who speaks A1 Norwegian in order to help beginners improve their Norwegian language skills.\",\n  },\n  { id: 2, role: \"assistant\", content: \"Hei!\" },\n];\n\nconst username = \"User\";\nconst botname = \"ChatBot\";\n\nfunction Message({ content, name }) {\n  return (\n    <li className=\"message\">\n      <span className=\"message-sender\">{name}</span> {content}\n    </li>\n  );\n}\n\nfunction Messages({ messages }) {\n  const messagesEndRef = useRef(null); // reference val not needed for rendering\n\n  // pin scroll to bottom\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView();\n  }, [messages]);\n\n  return (\n    <ul className=\"messages\">\n      {/* Each message contains a 'role'\n          Handles 'user', 'system', and 'assistant' roles,\n          assigning them to their proper names\n      */}\n\n      {messages.map(\n        (msg) =>\n          msg.role !== \"system\" && (\n            <Message\n              key={msg.id}\n              content={msg.content}\n              name={msg.role === \"user\" ? username : botname}\n            />\n          )\n      )}\n      <div ref={messagesEndRef} />\n    </ul>\n  );\n}\n\nfunction SpecialCharacters() {\n  return (\n    <div id=\"special-characters-keyboard\">\n      <button class=\"char-key\">&#xE6;</button>\n      <button class=\"char-key\">&#248;</button>\n      <button class=\"char-key\">&#229;</button>\n      <button class=\"char-key\">&#198;</button>\n      <button class=\"char-key\">&#216;</button>\n      <button class=\"char-key\">&#197;</button>\n    </div>\n  );\n}\n\nfunction MessageBar({ onSendMessage }) {\n  const [input, setInput] = useState(\"\");\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    onSendMessage(input);\n    setInput(\"\");\n  };\n\n  return (\n    <div id=\"messageBar\">\n      <form id=\"messageBar-form\" onSubmit={handleSubmit}>\n        <input\n          id=\"messageBar-text\"\n          type=\"text\"\n          placeholder=\"Enter Message here...\"\n          autoComplete=\"off\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n        />\n        <button id=\"messageBar-send-button\" type=\"submit\">\n          Send\n        </button>\n      </form>\n      <SpecialCharacters />\n    </div>\n  );\n}\n\nfunction CurrentRoomTitle({ name }) {\n  return <h1 id=\"room-title\">{name}</h1>;\n}\n\nfunction CurrentRoom() {\n  const [chat, setChat] = useState(initialMessagesList);\n\n  // JSON REQUEST TO BACKEND\n  const sendMessage = async (message) => {\n    // add message to chat\n    const updatedChat = [\n      ...chat,\n      { id: chat.length + 1, role: \"user\", content: message },\n    ];\n    setChat(updatedChat);\n\n    // get chatbot response from django server\n    // message = user input from input field, set where return is\n    try {\n      const server_response = await fetch(\"http://localhost:8000/chatbot/\", {\n        method: \"POST\", // sending data to server\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ chatsofar: updatedChat }), // can only send JSON\n      });\n\n      // django response is parsed as JSON, and is now a useful JavaScript object?\n      const data = await server_response.json();\n\n      // add resopnse to chat\n      setChat([...updatedChat, { role: \"assistant\", content: data.reply }]);\n    } catch (error) {\n      console.error(\"Error sending message:\", error);\n    }\n  };\n\n  // putting all components together\n  return (\n    <div id=\"current-room\">\n      <CurrentRoomTitle name={\"Moby Chat\"} />\n      <Messages messages={chat} />\n      <MessageBar onSendMessage={sendMessage} />\n    </div>\n  );\n}\n\nexport default function App() {\n  return <CurrentRoom />;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}