{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Annabel\\\\chat-app\\\\frontend\\\\src\\\\pages\\\\ChatRoom.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$();\nimport React, { useRef, useState, useEffect, memo } from 'react';\nimport { translateText, botResponse } from './apiService';\nimport { XMarkIcon } from '@heroicons/react/24/outline';\nimport { Link } from 'react-router-dom';\nimport { languageData } from \"./languageData.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst username = 'User';\nconst botname = 'Mogi';\nconst defaultLanguage = \"Norwegian\";\nfunction SpecialCharacters({\n  onClickCharacter,\n  characters\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex gap-1 mt-1\",\n    children: characters.map((c, index) => {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onClickCharacter(c),\n        className: \"bg-[#D9E5EF] px-2 hover:bg-[#c5cfd7]\",\n        children: c\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_c = SpecialCharacters;\n;\n\n// translate\n// memoization prevents renders of messages that haven't changed\nconst Message = /*#__PURE__*/_s( /*#__PURE__*/memo(_c2 = _s(function Message({\n  content,\n  name\n}) {\n  _s();\n  // state controlling translation visibility\n  const [isTranslatedMessageVisible, setIsTranslatedMessageVisible] = useState(false);\n\n  // state for storing translated text\n  const [translatedMessage, setTranslatedMessage] = useState(\" . . .\");\n\n  // state for checking if text has been translated\n  const [messageIsTranslated, setMessageIsTranslated] = useState(false);\n\n  // handle message click event\n  const handleMessageClick = async () => {\n    // toggle visibility of translated message\n    setIsTranslatedMessageVisible(prev => !prev);\n\n    // each message is translated only once\n    if (!messageIsTranslated) {\n      try {\n        const translated = await translateText(content);\n        setTranslatedMessage(translated);\n        setMessageIsTranslated(true);\n      } catch (error) {\n        console.error('Translation failed:', error);\n      }\n    }\n  };\n\n  // render message component\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"hover:bg-[#f1f6f9] pb-4\",\n    onClick: handleMessageClick,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-amber-500 block\",\n      children: [name, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: 'black',\n        cursor: 'auto'\n      },\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), isTranslatedMessageVisible && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \" text-[#98a0a7]\",\n      children: ['|--', \" \", translatedMessage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}, \"xULoa2Ol5HoorhO7jUQA6G0+tG8=\")), \"xULoa2Ol5HoorhO7jUQA6G0+tG8=\");\n_c3 = Message;\nconst Messages = /*#__PURE__*/_s2( /*#__PURE__*/memo(_c4 = _s2(function Messages({\n  messages\n}) {\n  _s2();\n  // references the end of the message list\n  const messagesEndRef = useRef();\n\n  // when the message list is updated, the \"end ref\"\n  // reference scrolls into view\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView();\n  }, [messages]);\n\n  // render message list\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"\",\n    children: [messages.map((msg, index) => {\n      if (msg.role !== \"system\") {\n        // unique key for each message\n        const key = index;\n        return /*#__PURE__*/_jsxDEV(Message, {\n          content: msg.content,\n          name: msg.role === 'user' ? username : botname\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this);\n      }\n      return null;\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: messagesEndRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}, \"0epSoi03NVSoD0I0FiLK4iVNXOA=\")), \"0epSoi03NVSoD0I0FiLK4iVNXOA=\");\n_c5 = Messages;\nfunction MessageBar({\n  onSendMessage,\n  characters\n}) {\n  _s3();\n  const [input, setInput] = useState('');\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSendMessage(input);\n    setInput('');\n  };\n\n  // handles special characters\n  const typeSpecialCharacter = character => {\n    setInput(input + character);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"relative flex w-full pr-3\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"flex-grow p-3 bg-[#EBF3FA]\",\n        type: \"text\",\n        placeholder: \"Enter Message here...\",\n        autoComplete: \"off\",\n        value: input,\n        onChange: e => setInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"px-5  bg-[#D9E5EF]\",\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(SpecialCharacters, {\n        characters: characters,\n        onClickCharacter: typeSpecialCharacter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n// bot response \n_s3(MessageBar, \"WVveI0ACa0LqOSOlGzu58xcz+KE=\");\n_c6 = MessageBar;\nfunction Chat() {\n  _s4();\n  // state for storing chat\n  const [chatList, setChatList] = useState([]);\n  const [specialCharacters, setSpecialCharacters] = useState(languageData[\"Norwegian\"].specialCharacters);\n\n  // function to initialize chat lsit accroding to language\n  const initializeChatList = lang => [{\n    \"role\": \"system\",\n    \"content\": \"You are a friendly \" + lang + \" speaker who speaks A1 \" + lang + \". Your goal is to help the user improve their \" + lang + \" and keep the conversation going. Repeat words already used in the chat as much as possible.\"\n  }, {\n    \"role\": \"assistant\",\n    \"content\": languageData[lang].prompt\n  }];\n  useEffect(() => {\n    const initialLanguage = localStorage.getItem('learnLanguage' || defaultLanguage);\n    setChatList(initializeChatList(initialLanguage));\n    setSpecialCharacters(languageData[initialLanguage].specialCharacters);\n\n    // listen for changes to local storage, indicating language has changed\n    const handleStorageChange = event => {\n      if (event.key === 'learnLanguage') {\n        const newLanguage = event.newValue || defaultLanguage;\n        setChatList(initializeChatList(newLanguage));\n        setSpecialCharacters(languageData[newLanguage].specialCharacters);\n      }\n    };\n\n    // when local storage changes, sets new learning language if changed\n    window.addEventListener('storage', handleStorageChange);\n\n    // clean up event listener\n    return () => {\n      window.removeEventListener('storage', handleStorageChange);\n    };\n  }, []);\n\n  // handles message responses when user sends message\n  const getBotResponse = async message => {\n    // adds user's latest message to the list of chat messages\n    const updatedChatList = [...chatList, {\n      \"role\": \"user\",\n      \"content\": message\n    }];\n    setChatList(updatedChatList);\n\n    // updates chat with respones from bot\n    try {\n      const response = await botResponse(updatedChatList);\n      setChatList([...updatedChatList, response]);\n    } catch (error) {\n      console.error('Response failed:', error); // handles errors\n    }\n  };\n\n  // render room components\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-full p-3 pr-0\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow overflow-auto scrollbar-thin scrollbar-thumb-gray-200 scrollbar-thumb-rounded\",\n      children: /*#__PURE__*/_jsxDEV(Messages, {\n        messages: chatList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: /*#__PURE__*/_jsxDEV(MessageBar, {\n        onSendMessage: getBotResponse,\n        characters: specialCharacters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 5\n  }, this);\n}\n_s4(Chat, \"xk7ID8HVzdzGTrqgYTNgKpAyIQk=\");\n_c7 = Chat;\nfunction NavBar() {\n  _s5();\n  const [toggle, setToggle] = useState(false);\n  const item1 = toggle ? \"greetings!\" : \"hello\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: () => setToggle(!toggle),\n      className: \"hover:underline hover:cursor-pointer\",\n      children: item1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s5(NavBar, \"KMOoc8w16Lq5ZnA3xKzfamBycFo=\");\n_c8 = NavBar;\nfunction Correction() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-800 m-5\",\n      children: \"Coming soon! Text Correction~~\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n//\n_c9 = Correction;\nexport default function ChatRoom() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative flex flex-col h-screen text-base  bg-gradient-to-b from-green-200 to-blue-200 border-l\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: /*#__PURE__*/_jsxDEV(XMarkIcon, {\n        className: \"absolute top-6 right-8 h-10 w-10 text-gray-600 cursor-pointer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"turtle\",\n      className: \"flex-grow flex flex-col overflow-hidden mx-28 mt-12  bg-white rounded-md\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-grow flex overflow-hidden\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-grow overflow-auto relative\",\n          children: /*#__PURE__*/_jsxDEV(Chat, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-100 bg-[#E7F6F6] rounded-sm\",\n          children: /*#__PURE__*/_jsxDEV(Correction, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-[60px] text-gray-800 flex gap-4 justify-end items-center pr-28 pb-2\",\n      children: /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 263,\n    columnNumber: 5\n  }, this);\n}\n_c10 = ChatRoom;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n$RefreshReg$(_c, \"SpecialCharacters\");\n$RefreshReg$(_c2, \"Message$memo\");\n$RefreshReg$(_c3, \"Message\");\n$RefreshReg$(_c4, \"Messages$memo\");\n$RefreshReg$(_c5, \"Messages\");\n$RefreshReg$(_c6, \"MessageBar\");\n$RefreshReg$(_c7, \"Chat\");\n$RefreshReg$(_c8, \"NavBar\");\n$RefreshReg$(_c9, \"Correction\");\n$RefreshReg$(_c10, \"ChatRoom\");","map":{"version":3,"names":["React","useRef","useState","useEffect","memo","translateText","botResponse","XMarkIcon","Link","languageData","jsxDEV","_jsxDEV","Fragment","_Fragment","username","botname","defaultLanguage","SpecialCharacters","onClickCharacter","characters","className","children","map","c","index","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","Message","_s","_c2","content","name","isTranslatedMessageVisible","setIsTranslatedMessageVisible","translatedMessage","setTranslatedMessage","messageIsTranslated","setMessageIsTranslated","handleMessageClick","prev","translated","error","console","style","color","cursor","_c3","Messages","_s2","_c4","messages","messagesEndRef","_messagesEndRef$curre","current","scrollIntoView","msg","role","key","ref","_c5","MessageBar","onSendMessage","_s3","input","setInput","handleSubmit","event","preventDefault","typeSpecialCharacter","character","onSubmit","type","placeholder","autoComplete","value","onChange","e","target","_c6","Chat","_s4","chatList","setChatList","specialCharacters","setSpecialCharacters","initializeChatList","lang","prompt","initialLanguage","localStorage","getItem","handleStorageChange","newLanguage","newValue","window","addEventListener","removeEventListener","getBotResponse","message","updatedChatList","response","_c7","NavBar","_s5","toggle","setToggle","item1","_c8","Correction","_c9","ChatRoom","to","id","_c10","$RefreshReg$"],"sources":["C:/Users/Annabel/chat-app/frontend/src/pages/ChatRoom.js"],"sourcesContent":["import React, { useRef, useState, useEffect, memo } from 'react';\r\nimport { translateText, botResponse } from './apiService';\r\nimport { XMarkIcon } from '@heroicons/react/24/outline';\r\nimport { Link } from 'react-router-dom';\r\nimport { languageData } from \"./languageData.js\";\r\n\r\nconst username = 'User';\r\nconst botname = 'Mogi';\r\n\r\nconst defaultLanguage = \"Norwegian\"\r\n\r\n\r\n\r\nfunction SpecialCharacters({ onClickCharacter, characters }) {\r\n\r\n  return(\r\n    <div className=\"flex gap-1 mt-1\">\r\n      {characters.map((c, index) => {\r\n        return(\r\n        <button \r\n        key = {index}\r\n        onClick = {()=> onClickCharacter(c) } \r\n        className = \"bg-[#D9E5EF] px-2 hover:bg-[#c5cfd7]\">\r\n          {c}\r\n          </button>\r\n        )\r\n\r\n      })}\r\n\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\n// translate\r\n// memoization prevents renders of messages that haven't changed\r\nconst Message = memo(function Message({ content, name }) {\r\n \r\n  // state controlling translation visibility\r\n  const [isTranslatedMessageVisible, setIsTranslatedMessageVisible] = useState(false);\r\n  \r\n  // state for storing translated text\r\n  const [translatedMessage, setTranslatedMessage] = useState(\" . . .\");\r\n  \r\n  // state for checking if text has been translated\r\n  const [messageIsTranslated, setMessageIsTranslated] = useState(false);\r\n\r\n  // handle message click event\r\n  const handleMessageClick = async () => {\r\n\r\n    // toggle visibility of translated message\r\n    setIsTranslatedMessageVisible(prev => !prev);\r\n\r\n    // each message is translated only once\r\n    if(!messageIsTranslated) {\r\n      try {\r\n        const translated = await translateText(content);\r\n        setTranslatedMessage(translated);\r\n        setMessageIsTranslated(true);\r\n      } catch (error) {\r\n        console.error('Translation failed:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  // render message component\r\n  return(\r\n    <li className = \"hover:bg-[#f1f6f9] pb-4\" onClick={handleMessageClick}>\r\n      <span className = \"text-amber-500 block\">{name} </span>\r\n      <span style={{color:'black', cursor:'auto'}} >\r\n      {content}\r\n      </span>\r\n\r\n      {isTranslatedMessageVisible && (\r\n        <p className = \" text-[#98a0a7]\">\r\n          {'|--'} {translatedMessage}\r\n        </p>\r\n      )}\r\n\r\n    </li>\r\n  );\r\n});\r\n\r\n\r\nconst Messages = memo(function Messages({ messages }) {\r\n\r\n  // references the end of the message list\r\n  const messagesEndRef = useRef();\r\n  \r\n  // when the message list is updated, the \"end ref\"\r\n  // reference scrolls into view\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView();\r\n  }, [messages]);\r\n\r\n  // render message list\r\n  return(\r\n    <ul className = \"\">\r\n\r\n      {messages.map((msg, index) => {\r\n        if (msg.role !== \"system\") {\r\n          // unique key for each message\r\n          const key = index;\r\n          return (\r\n            <Message\r\n              key = {key}\r\n              content = {msg.content}\r\n              name={msg.role === 'user' ? username: botname}\r\n            />\r\n          );\r\n        }\r\n          return null;\r\n      })}\r\n\r\n      {/* Reference div pins scroll to the bottom */}\r\n      <div ref = {messagesEndRef} />\r\n    </ul>\r\n  );\r\n});\r\n\r\nfunction MessageBar({ onSendMessage, characters }) {\r\n  const [input, setInput] = useState('');\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    onSendMessage(input);\r\n    setInput('');\r\n\r\n  };\r\n\r\n  // handles special characters\r\n  const typeSpecialCharacter = (character) => {\r\n    setInput(input + character);\r\n  }; \r\n\r\n  return(\r\n    <>\r\n      <form className = \"relative flex w-full pr-3\" onSubmit = { handleSubmit }>\r\n        <input className = \"flex-grow p-3 bg-[#EBF3FA]\"\r\n          type = \"text\"  \r\n          placeholder = \r\n          \"Enter Message here...\"\r\n          autoComplete=\"off\"\r\n          value = {input}\r\n          onChange ={(e) => setInput(e.target.value)}\r\n          >\r\n\r\n          </input>\r\n          <button className=\"px-5  bg-[#D9E5EF]\" type = \"submit\">Send</button>\r\n      </form>\r\n\r\n      <div >\r\n          <SpecialCharacters characters = {characters} onClickCharacter = {typeSpecialCharacter} />\r\n      </div>\r\n      \r\n    </>\r\n  );\r\n}\r\n\r\n// bot response \r\nfunction Chat() {\r\n\r\n  // state for storing chat\r\n  const [chatList, setChatList] = useState([]);\r\n  const [specialCharacters, setSpecialCharacters] = useState(languageData[\"Norwegian\"].specialCharacters);\r\n    \r\n  // function to initialize chat lsit accroding to language\r\n  const initializeChatList = (lang) => [\r\n    { \"role\":\"system\", \"content\": \"You are a friendly \" + lang + \" speaker who speaks A1 \" + lang +\". Your goal is to help the user improve their \" + lang +  \" and keep the conversation going. Repeat words already used in the chat as much as possible.\" },\r\n    { \"role\": \"assistant\", \"content\": languageData[lang].prompt },\r\n  ];\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    const initialLanguage = localStorage.getItem('learnLanguage' || defaultLanguage);\r\n    setChatList(initializeChatList(initialLanguage));\r\n    setSpecialCharacters(languageData[initialLanguage].specialCharacters);\r\n\r\n    // listen for changes to local storage, indicating language has changed\r\n    const handleStorageChange = (event) => {\r\n      if (event.key === 'learnLanguage') {\r\n        const newLanguage = event.newValue || defaultLanguage;\r\n        setChatList(initializeChatList(newLanguage));\r\n        setSpecialCharacters(languageData[newLanguage].specialCharacters);\r\n      } \r\n    };\r\n\r\n    // when local storage changes, sets new learning language if changed\r\n    window.addEventListener('storage', handleStorageChange);\r\n\r\n    // clean up event listener\r\n    return () => {\r\n      window.removeEventListener('storage', handleStorageChange);\r\n    };\r\n\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  // handles message responses when user sends message\r\n  const getBotResponse = async (message) => {\r\n\r\n    // adds user's latest message to the list of chat messages\r\n    const updatedChatList = [...chatList, { \"role\": \"user\", \"content\": message }];\r\n    setChatList(updatedChatList);\r\n\r\n    // updates chat with respones from bot\r\n    try {\r\n      const response = await botResponse(updatedChatList);\r\n      setChatList([...updatedChatList, response]);\r\n      \r\n    } catch (error) {\r\n      console.error('Response failed:', error); // handles errors\r\n    }\r\n\r\n  };\r\n\r\n\r\n  // render room components\r\n  return (\r\n    <div className = \"flex flex-col h-full p-3 pr-0\">\r\n      <div className = \"flex-grow overflow-auto scrollbar-thin scrollbar-thumb-gray-200 scrollbar-thumb-rounded\">\r\n        <Messages messages = { chatList } />\r\n      </div>\r\n\r\n      <div className = \"\">\r\n        <MessageBar onSendMessage = { getBotResponse } characters = {specialCharacters} />\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nfunction NavBar() {\r\n  const [toggle, setToggle] = useState(false);\r\n  const item1 = toggle ? \"greetings!\":\"hello\";\r\n\r\n  return (\r\n    <>\r\n        <p onClick={() => setToggle(!toggle)} className=\"hover:underline hover:cursor-pointer\">{ item1 }</p>\r\n\r\n        \r\n\r\n    </>\r\n  )\r\n}\r\n\r\nfunction Correction() {\r\n\r\n  return(\r\n    <>\r\n      <p className = \"text-gray-800 m-5\">Coming soon! Text Correction~~</p>\r\n    </>\r\n  );\r\n}\r\n//\r\n\r\nexport default function ChatRoom() {\r\n  return (\r\n    <div className = \"relative flex flex-col h-screen text-base  bg-gradient-to-b from-green-200 to-blue-200 border-l\">\r\n\r\n\r\n      {/* Position the X icon in the top-right corner of the chatroom */}\r\n\r\n      <Link to = \"/\">\r\n      <XMarkIcon className=\"absolute top-6 right-8 h-10 w-10 text-gray-600 cursor-pointer\" />\r\n      </Link>\r\n      <div id =\"turtle\" className = \"flex-grow flex flex-col overflow-hidden mx-28 mt-12  bg-white rounded-md\">\r\n\r\n        <div className=\"flex-grow flex overflow-hidden\">\r\n          <div className = \"flex-grow overflow-auto relative\">\r\n            <Chat />\r\n          </div>\r\n          <div className = \"w-100 bg-[#E7F6F6] rounded-sm\">\r\n          <Correction />\r\n          </div>\r\n        </div>\r\n\r\n        \r\n      </div>\r\n\r\n      <div className = \"h-[60px] text-gray-800 flex gap-4 justify-end items-center pr-28 pb-2\">\r\n        <NavBar />\r\n        \r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}