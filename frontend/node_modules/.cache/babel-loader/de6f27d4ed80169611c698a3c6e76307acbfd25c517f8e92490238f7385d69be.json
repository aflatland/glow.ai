{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Annabel\\\\chat-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport { translateText, botResponse } from './apiService';\n\n//const server = \"http://127.0.0.1:8000/\"; // https://backend-ao4yls34ba-uc.a.run.app\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst username = 'User';\nconst botname = 'Mogi';\nconst initialChatList = [{\n  \"role\": \"system\",\n  \"content\": \"You are a friendly Norwegian who speaks A1 Norwegian. Your goal is to help the user improve their Norwegian and keep the conversation going. Repeat words already used in the chat as much as possible.\"\n}, {\n  \"role\": \"assistant\",\n  \"content\": \"Hei! Jeg er en vennlig AI-generert språklærer. Hva ønsker du å snakke om?\"\n}];\nfunction SpecialCharacters() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"special-characters-keyboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"char-key\",\n      children: \"\\xE6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"char-key\",\n      children: \"\\xF8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"char-key\",\n      children: \"\\xE5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"char-key\",\n      children: \"\\xC6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"char-key\",\n      children: \"\\xD8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"char-key\",\n      children: \"\\xC5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_c = SpecialCharacters;\n;\n\n// translate\nfunction Message({\n  content,\n  name\n}) {\n  _s();\n  // state for hover over message effect\n  const [messageIsHovered, setMessageIsHovered] = useState(false);\n\n  // state controlling translation visibility\n  const [isTranslatedMessageVisible, setIsTranslatedMessageVisible] = useState(false);\n\n  // state for storing translated text\n  const [translatedMessage, setTranslatedMessage] = useState(\"...\");\n\n  // state for checking if text has been translated\n  const [messageIsTranslated, setMessageIsTranslated] = useState(false);\n\n  // detects mouse eneter/leave events to trigger hover state\n  const handleMouseEnter = () => setMessageIsHovered(true);\n  const handleMouseLeave = () => setMessageIsHovered(false);\n\n  // inline styles for text, responds to hover state\n  const messageTextColor = messageIsHovered ? '#717171' : '#181818';\n  const cursor = messageIsHovered ? 'pointer' : 'auto';\n\n  // handle message click event\n  const handleMessageClick = async () => {\n    // toggle visibility of translated message\n    setIsTranslatedMessageVisible(prev => !prev);\n\n    // each message is translated only once\n    if (!messageIsTranslated) {\n      try {\n        const translated = await translateText(content);\n        setTranslatedMessage(translated);\n        setMessageIsTranslated(true);\n      } catch (error) {\n        console.error('Translation failed:', error);\n      }\n    }\n  };\n\n  // render message component\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"message\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"message-sender\",\n      children: [name, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: messageTextColor,\n        cursor: cursor\n      },\n      onMouseEnter: handleMouseEnter,\n      onMouseLeave: handleMouseLeave,\n      onClick: handleMessageClick,\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), isTranslatedMessageVisible && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        paddingLeft: '50px',\n        color: '#F88379'\n      },\n      children: translatedMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(Message, \"vRMP/9TA6xX3WjFFeUwh45RHt4g=\");\n_c2 = Message;\nfunction Messages({\n  messages\n}) {\n  _s2();\n  // references the end of the message list\n  const messagesEndRef = useRef();\n\n  // when the message list is updated, the \"end ref\"\n  // reference scrolls into view\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView();\n  }, [messages]);\n\n  // render message list\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"messages\",\n    children: [messages.map((msg, index) => {\n      if (msg.role !== \"system\") {\n        // unique key for each message\n        const key = index;\n        return /*#__PURE__*/_jsxDEV(Message, {\n          content: msg.content,\n          name: msg.role === 'user' ? username : botname\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this);\n      }\n      return null;\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: messagesEndRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s2(Messages, \"0epSoi03NVSoD0I0FiLK4iVNXOA=\");\n_c3 = Messages;\nfunction MessageBar({\n  onSendMessage\n}) {\n  _s3();\n  const [input, setInput] = useState('');\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSendMessage(input);\n    setInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"messageBar\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"messageBar-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"messageBar-text\",\n        type: \"text\",\n        placeholder: \"Enter Message here...\",\n        autoComplete: \"off\",\n        value: input,\n        onChange: e => setInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"messageBar-send-button\",\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SpecialCharacters, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n\n// bot response \n_s3(MessageBar, \"WVveI0ACa0LqOSOlGzu58xcz+KE=\");\n_c4 = MessageBar;\nfunction Chat() {\n  _s4();\n  // state for storing chat\n  const [chatList, setChatList] = useState(initialChatList);\n\n  // handles message responses when user sends message\n  const getBotResponse = async message => {\n    // adds user's latest message to the list of chat messages\n    const updatedChatList = [...chatList, {\n      \"role\": \"user\",\n      \"content\": message\n    }];\n    setChatList(updatedChatList);\n\n    // updates chat with respones from bot\n    try {\n      const response = await botResponse(updatedChatList);\n      setChatList([...updatedChatList, response]);\n    } catch (error) {\n      console.error('Response failed:', error); // handles errors\n    }\n  };\n\n  // render room components\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex-grow overflow-auto\",\n    children: [/*#__PURE__*/_jsxDEV(Messages, {\n      messages: chatList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageBar, {\n      onSendMessage: getBotResponse\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n}\n_s4(Chat, \"SJLjbM/3liNfUYNRqSMuSHAkYqQ=\");\n_c5 = Chat;\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative flex flex-col h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow flex overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(Chat, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-80 bg-rose-200 border-l\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute bottom-0 left-0 right-0 h-[60px] bg-gray-800 text-white flex justify-end items-center pr-10\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Navbar Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n}\n_c6 = App;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"SpecialCharacters\");\n$RefreshReg$(_c2, \"Message\");\n$RefreshReg$(_c3, \"Messages\");\n$RefreshReg$(_c4, \"MessageBar\");\n$RefreshReg$(_c5, \"Chat\");\n$RefreshReg$(_c6, \"App\");","map":{"version":3,"names":["React","useRef","useState","useEffect","translateText","botResponse","jsxDEV","_jsxDEV","username","botname","initialChatList","SpecialCharacters","id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","Message","content","name","_s","messageIsHovered","setMessageIsHovered","isTranslatedMessageVisible","setIsTranslatedMessageVisible","translatedMessage","setTranslatedMessage","messageIsTranslated","setMessageIsTranslated","handleMouseEnter","handleMouseLeave","messageTextColor","cursor","handleMessageClick","prev","translated","error","console","style","color","onMouseEnter","onMouseLeave","onClick","paddingLeft","_c2","Messages","messages","_s2","messagesEndRef","_messagesEndRef$curre","current","scrollIntoView","map","msg","index","role","key","ref","_c3","MessageBar","onSendMessage","_s3","input","setInput","handleSubmit","event","preventDefault","onSubmit","type","placeholder","autoComplete","value","onChange","e","target","_c4","Chat","_s4","chatList","setChatList","getBotResponse","message","updatedChatList","response","_c5","App","_c6","$RefreshReg$"],"sources":["C:/Users/Annabel/chat-app/frontend/src/App.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport { translateText, botResponse } from './apiService';\n\n//const server = \"http://127.0.0.1:8000/\"; // https://backend-ao4yls34ba-uc.a.run.app\nconst username = 'User';\nconst botname = 'Mogi';\n\nconst initialChatList = [\n  { \"role\":\"system\", \"content\": \"You are a friendly Norwegian who speaks A1 Norwegian. Your goal is to help the user improve their Norwegian and keep the conversation going. Repeat words already used in the chat as much as possible.\" },\n  { \"role\": \"assistant\", \"content\":\"Hei! Jeg er en vennlig AI-generert språklærer. Hva ønsker du å snakke om?\" },\n];\n\nfunction SpecialCharacters() {\n\n  return(\n    <div id = \"special-characters-keyboard\">\n      <button className = \"char-key\">&#xE6;</button>\n      <button className = \"char-key\">&#248;</button>\n      <button className = \"char-key\">&#229;</button>\n      <button className = \"char-key\">&#198;</button>\n      <button className = \"char-key\">&#216;</button>\n      <button className = \"char-key\">&#197;</button>\n    </div>\n  );\n};\n\n// translate\nfunction Message({ content, name }) {\n  // state for hover over message effect\n  const [messageIsHovered, setMessageIsHovered] = useState(false); \n  \n  // state controlling translation visibility\n  const [isTranslatedMessageVisible, setIsTranslatedMessageVisible] = useState(false);\n  \n  // state for storing translated text\n  const [translatedMessage, setTranslatedMessage] = useState(\"...\");\n  \n  // state for checking if text has been translated\n  const [messageIsTranslated, setMessageIsTranslated] = useState(false);\n\n  // detects mouse eneter/leave events to trigger hover state\n  const handleMouseEnter = () => setMessageIsHovered(true);\n  const handleMouseLeave = () => setMessageIsHovered(false);\n\n  // inline styles for text, responds to hover state\n  const messageTextColor = messageIsHovered ? '#717171':'#181818';\n  const cursor = messageIsHovered? 'pointer': 'auto';\n\n  // handle message click event\n  const handleMessageClick = async () => {\n\n    // toggle visibility of translated message\n    setIsTranslatedMessageVisible(prev => !prev);\n\n    // each message is translated only once\n    if(!messageIsTranslated) {\n      try {\n        const translated = await translateText(content);\n        setTranslatedMessage(translated);\n        setMessageIsTranslated(true);\n      } catch (error) {\n        console.error('Translation failed:', error);\n      }\n    }\n  }\n\n  // render message component\n  return(\n    <li className = \"message\">\n      <span className = \"message-sender\">{name} </span>\n      <span style={{color:messageTextColor, cursor:cursor}} \n      onMouseEnter={handleMouseEnter} \n      onMouseLeave={handleMouseLeave}\n      onClick={handleMessageClick}>\n      {content}\n      </span>\n\n      {isTranslatedMessageVisible && (\n        <p style={{ paddingLeft: '50px', color: '#F88379' }}>\n          {translatedMessage}\n        </p>\n      )}\n\n    </li>\n  );\n}\n\nfunction Messages({ messages }) {\n\n  // references the end of the message list\n  const messagesEndRef = useRef();\n  \n  // when the message list is updated, the \"end ref\"\n  // reference scrolls into view\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView();\n  }, [messages]);\n\n  // render message list\n  return(\n    <ul className = \"messages\">\n\n      {messages.map((msg, index) => {\n        if (msg.role !== \"system\") {\n          // unique key for each message\n          const key = index;\n          return (\n            <Message\n              key = {key}\n              content = {msg.content}\n              name={msg.role === 'user' ? username: botname}\n            />\n          );\n        }\n          return null;\n      })}\n\n      {/* Reference div pins scroll to the bottom */}\n      <div ref = {messagesEndRef} />\n    </ul>\n  );\n}\n\nfunction MessageBar({ onSendMessage }) {\n  const [input, setInput] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    onSendMessage(input);\n    setInput('');\n\n  };\n\n  return(\n    <div id = \"messageBar\">\n      <form id = \"messageBar-form\" onSubmit = { handleSubmit }>\n        <input id = \"messageBar-text\"\n          type = \"text\"  \n          placeholder = \n          \"Enter Message here...\"\n          autoComplete=\"off\"\n          value = {input}\n          onChange ={(e) => setInput(e.target.value)}\n          />\n          <button id = \"messageBar-send-button\" type = \"submit\">Send</button>\n      </form>\n      <SpecialCharacters />\n    </div>\n  );\n}\n\n// bot response \nfunction Chat() {\n\n  // state for storing chat\n  const [chatList, setChatList] = useState(initialChatList);\n\n  // handles message responses when user sends message\n  const getBotResponse = async (message) => {\n\n    // adds user's latest message to the list of chat messages\n    const updatedChatList = [...chatList, { \"role\": \"user\", \"content\": message }];\n    setChatList(updatedChatList);\n\n    // updates chat with respones from bot\n    try {\n      const response = await botResponse(updatedChatList);\n      setChatList([...updatedChatList, response]);\n      \n    } catch (error) {\n      console.error('Response failed:', error); // handles errors\n    }\n\n  };\n\n  // render room components\n  return (\n    <div className = \"flex-grow overflow-auto\">\n      <Messages messages = { chatList } />\n      <MessageBar onSendMessage = { getBotResponse } />\n    </div>\n  );\n}\n\nexport default function App() {\n  return (\n    <div className = \"relative flex flex-col h-screen\">\n      \n      <div className=\"flex-grow flex overflow-hidden\">\n        {/* chat */}\n        <Chat />\n        \n        {/* Right Panel Section */}\n        <div className = \"w-80 bg-rose-200 border-l\">\n        </div>\n      </div>\n\n\n\n      {/* nav bar */}\n      <div className = \"absolute bottom-0 left-0 right-0 h-[60px] bg-gray-800 text-white flex justify-end items-center pr-10\">\n        <p>Navbar Content</p>\n      </div>\n\n    </div>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}