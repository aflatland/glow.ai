{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Annabel\\\\chat-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialMessagesList = [{\n  \"id\": 1,\n  \"role\": \"system\",\n  \"content\": \"You are a friendly Norwegian who speaks A1 Norwegian in order to help beginners improve their Norwegian language skills.\"\n}, {\n  \"id\": 2,\n  \"role\": \"assistant\",\n  \"content\": \"Hei!\"\n}];\nconst username = 'User';\nconst botname = 'ChatBot';\nfunction Message({\n  content,\n  name\n}) {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"message\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"message-sender\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), \" \", content]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_c = Message;\nfunction Messages({\n  messages\n}) {\n  _s();\n  const messagesEndRef = useRef(null); // reference val not needed for rendering\n\n  // pin scroll to bottom\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView();\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"messages\",\n    children: [messages.map(msg => msg.role !== \"system\" && /*#__PURE__*/_jsxDEV(Message, {\n      content: msg.content,\n      name: msg.role === 'user' ? username : botname\n    }, msg.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 34\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: messagesEndRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(Messages, \"0epSoi03NVSoD0I0FiLK4iVNXOA=\");\n_c2 = Messages;\nfunction SpecialCharacters() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"special-characters-keyboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      class: \"char-key\",\n      children: \"\\xE6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      class: \"char-key\",\n      children: \"\\xF8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      class: \"char-key\",\n      children: \"\\xE5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      class: \"char-key\",\n      children: \"\\xC6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      class: \"char-key\",\n      children: \"\\xD8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      class: \"char-key\",\n      children: \"\\xC5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_c3 = SpecialCharacters;\n;\nfunction MessageBar({\n  onSendMessage\n}) {\n  _s2();\n  const [input, setInput] = useState('');\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSendMessage(input);\n    setInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"messageBar\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"messageBar-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"messageBar-text\",\n        type: \"text\",\n        placeholder: \"Enter Message here...\",\n        autoComplete: \"off\",\n        value: input,\n        onChange: e => setInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"messageBar-send-button\",\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SpecialCharacters, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s2(MessageBar, \"WVveI0ACa0LqOSOlGzu58xcz+KE=\");\n_c4 = MessageBar;\nfunction CurrentRoomTitle({\n  name\n}) {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    id: \"room-title\",\n    children: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_c5 = CurrentRoomTitle;\nfunction CurrentRoom() {\n  _s3();\n  const [chat, setChat] = useState(initialMessagesList);\n\n  // JSON REQUEST TO BACKEND\n  const sendMessage = async message => {\n    // add message to chat\n    const updatedChat = [...chat, {\n      \"id\": chat.length + 1,\n      \"role\": \"user\",\n      \"content\": message\n    }];\n    setChat(updatedChat);\n\n    // get chatbot response from django server\n    // message = user input from input field, set where return is\n    try {\n      const server_response = await fetch('http://localhost:8000/chatbot/', {\n        method: 'POST',\n        // sending data to server\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          chatsofar: updatedChat\n        }) // can only send JSON\n      });\n\n      // django response is parsed as JSON, and is now a useful JavaScript object?\n      const data = await server_response.json();\n\n      // add resopnse to chat\n      setChat([...updatedChat, {\n        \"role\": \"assistant\",\n        \"content\": data.reply\n      }]);\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n\n  // putting all components together\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"current-room\",\n    children: [/*#__PURE__*/_jsxDEV(CurrentRoomTitle, {\n      name: \"Moby Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Messages, {\n      messages: chat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageBar, {\n      onSendMessage: sendMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n_s3(CurrentRoom, \"zD6e7F0uZJrCY/Uk1WTRFAhsfpg=\");\n_c6 = CurrentRoom;\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(CurrentRoom, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 10\n  }, this);\n}\n_c7 = App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"Message\");\n$RefreshReg$(_c2, \"Messages\");\n$RefreshReg$(_c3, \"SpecialCharacters\");\n$RefreshReg$(_c4, \"MessageBar\");\n$RefreshReg$(_c5, \"CurrentRoomTitle\");\n$RefreshReg$(_c6, \"CurrentRoom\");\n$RefreshReg$(_c7, \"App\");","map":{"version":3,"names":["React","useRef","useState","useEffect","jsxDEV","_jsxDEV","initialMessagesList","username","botname","Message","content","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Messages","messages","_s","messagesEndRef","_messagesEndRef$curre","current","scrollIntoView","map","msg","role","id","ref","_c2","SpecialCharacters","class","_c3","MessageBar","onSendMessage","_s2","input","setInput","handleSubmit","event","preventDefault","onSubmit","type","placeholder","autoComplete","value","onChange","e","target","_c4","CurrentRoomTitle","_c5","CurrentRoom","_s3","chat","setChat","sendMessage","message","updatedChat","length","server_response","fetch","method","headers","body","JSON","stringify","chatsofar","data","json","reply","error","console","_c6","App","_c7","$RefreshReg$"],"sources":["C:/Users/Annabel/chat-app/frontend/src/App.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\n\nconst initialMessagesList = [\n  { \"id\": 1, \"role\":\"system\", \"content\": \"You are a friendly Norwegian who speaks A1 Norwegian in order to help beginners improve their Norwegian language skills.\" },\n  { \"id\": 2, \"role\": \"assistant\", \"content\":\"Hei!\" },\n];\n\nconst username = 'User';\nconst botname = 'ChatBot';\n\nfunction Message({ content, name }) {\n  return(\n    <li className = \"message\">\n      <span className = \"message-sender\">{name}</span> {content}\n    </li>\n  );\n}\n\nfunction Messages({ messages }) {\n  const messagesEndRef = useRef(null); // reference val not needed for rendering\n\n  // pin scroll to bottom\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView();\n  }, [messages]);\n\n  return(\n    <ul className = \"messages\">\n\n      {/* Each message contains a 'role'\n          Handles 'user', 'system', and 'assistant' roles,\n          assigning them to their proper names\n      */}\n\n      {messages.map((msg) => (\n          msg.role!==\"system\" && <Message key = {msg.id} content = {msg.content} name = {msg.role === 'user' ? username: botname} />\n      ))}\n      <div ref = {messagesEndRef} />\n    </ul>\n  );\n}\n\nfunction SpecialCharacters() {\n\n  return(\n    <div id = \"special-characters-keyboard\">\n      <button class = \"char-key\">&#xE6;</button>\n      <button class = \"char-key\">&#248;</button>\n      <button class = \"char-key\">&#229;</button>\n      <button class = \"char-key\">&#198;</button>\n      <button class = \"char-key\">&#216;</button>\n      <button class = \"char-key\">&#197;</button>\n    </div>\n  );\n};\n\nfunction MessageBar({ onSendMessage }) {\n  const [input, setInput] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    onSendMessage(input);\n    setInput('');\n\n  };\n\n  return(\n    <div id = \"messageBar\">\n      <form id = \"messageBar-form\" onSubmit = { handleSubmit }>\n        <input id = \"messageBar-text\"\n          type = \"text\"  \n          placeholder = \n          \"Enter Message here...\"\n          autoComplete=\"off\"\n          value = {input}\n          onChange ={(e) => setInput(e.target.value)}\n          />\n          <button id = \"messageBar-send-button\" type = \"submit\">Send</button>\n      </form>\n      <SpecialCharacters />\n    </div>\n  );\n}\n\nfunction CurrentRoomTitle({ name }){\n  return(\n    <h1 id = \"room-title\">{ name }</h1>\n  );\n  \n}\n\nfunction CurrentRoom() {\n\n  const [chat, setChat] = useState(initialMessagesList);\n\n  // JSON REQUEST TO BACKEND\n  const sendMessage = async (message) => {\n\n    // add message to chat\n    const updatedChat = [...chat, { \"id\": chat.length + 1, \"role\": \"user\", \"content\": message }];\n    setChat(updatedChat);\n\n    // get chatbot response from django server\n    // message = user input from input field, set where return is\n    try {\n    const server_response = await fetch('http://localhost:8000/chatbot/', {\n      method: 'POST', // sending data to server\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ chatsofar: updatedChat }), // can only send JSON\n    });\n\n    // django response is parsed as JSON, and is now a useful JavaScript object?\n    const data = await server_response.json();\n\n    // add resopnse to chat\n    setChat([...updatedChat, { \"role\":\"assistant\", \"content\": data.reply }]);\n  } catch (error) {\n    console.error('Error sending message:', error);\n  }\n  };\n\n\n  // putting all components together\n  return (\n    <div id = \"current-room\">\n      <CurrentRoomTitle name = {\"Moby Chat\"} />\n      <Messages messages = {chat} />\n      <MessageBar onSendMessage = {sendMessage} />\n\n    </div>\n  );\n}\n\nexport default function App() {\n  return <CurrentRoom />;\n}"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,mBAAmB,GAAG,CAC1B;EAAE,IAAI,EAAE,CAAC;EAAE,MAAM,EAAC,QAAQ;EAAE,SAAS,EAAE;AAA2H,CAAC,EACnK;EAAE,IAAI,EAAE,CAAC;EAAE,MAAM,EAAE,WAAW;EAAE,SAAS,EAAC;AAAO,CAAC,CACnD;AAED,MAAMC,QAAQ,GAAG,MAAM;AACvB,MAAMC,OAAO,GAAG,SAAS;AAEzB,SAASC,OAAOA,CAAC;EAAEC,OAAO;EAAEC;AAAK,CAAC,EAAE;EAClC,oBACEN,OAAA;IAAIO,SAAS,EAAG,SAAS;IAAAC,QAAA,gBACvBR,OAAA;MAAMO,SAAS,EAAG,gBAAgB;MAAAC,QAAA,EAAEF;IAAI;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,KAAC,EAACP,OAAO;EAAA;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAET;AAACC,EAAA,GANQT,OAAO;AAQhB,SAASU,QAAQA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC9B,MAAMC,cAAc,GAAGrB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;EAErC;EACAE,SAAS,CAAC,MAAM;IAAA,IAAAoB,qBAAA;IACd,CAAAA,qBAAA,GAAAD,cAAc,CAACE,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBE,cAAc,CAAC,CAAC;EAC1C,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;EAEd,oBACEf,OAAA;IAAIO,SAAS,EAAG,UAAU;IAAAC,QAAA,GAOvBO,QAAQ,CAACM,GAAG,CAAEC,GAAG,IACdA,GAAG,CAACC,IAAI,KAAG,QAAQ,iBAAIvB,OAAA,CAACI,OAAO;MAAgBC,OAAO,EAAIiB,GAAG,CAACjB,OAAQ;MAACC,IAAI,EAAIgB,GAAG,CAACC,IAAI,KAAK,MAAM,GAAGrB,QAAQ,GAAEC;IAAQ,GAAhFmB,GAAG,CAACE,EAAE;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA4E,CAC5H,CAAC,eACFZ,OAAA;MAAKyB,GAAG,EAAIR;IAAe;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAET;AAACI,EAAA,CAtBQF,QAAQ;AAAAY,GAAA,GAARZ,QAAQ;AAwBjB,SAASa,iBAAiBA,CAAA,EAAG;EAE3B,oBACE3B,OAAA;IAAKwB,EAAE,EAAG,6BAA6B;IAAAhB,QAAA,gBACrCR,OAAA;MAAQ4B,KAAK,EAAG,UAAU;MAAApB,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1CZ,OAAA;MAAQ4B,KAAK,EAAG,UAAU;MAAApB,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1CZ,OAAA;MAAQ4B,KAAK,EAAG,UAAU;MAAApB,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1CZ,OAAA;MAAQ4B,KAAK,EAAG,UAAU;MAAApB,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1CZ,OAAA;MAAQ4B,KAAK,EAAG,UAAU;MAAApB,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1CZ,OAAA;MAAQ4B,KAAK,EAAG,UAAU;MAAApB,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV;AAACiB,GAAA,GAZQF,iBAAiB;AAYzB;AAED,SAASG,UAAUA,CAAC;EAAEC;AAAc,CAAC,EAAE;EAAAC,GAAA;EACrC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGrC,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMsC,YAAY,GAAIC,KAAK,IAAK;IAC9BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtBN,aAAa,CAACE,KAAK,CAAC;IACpBC,QAAQ,CAAC,EAAE,CAAC;EAEd,CAAC;EAED,oBACElC,OAAA;IAAKwB,EAAE,EAAG,YAAY;IAAAhB,QAAA,gBACpBR,OAAA;MAAMwB,EAAE,EAAG,iBAAiB;MAACc,QAAQ,EAAKH,YAAc;MAAA3B,QAAA,gBACtDR,OAAA;QAAOwB,EAAE,EAAG,iBAAiB;QAC3Be,IAAI,EAAG,MAAM;QACbC,WAAW,EACX,uBAAuB;QACvBC,YAAY,EAAC,KAAK;QAClBC,KAAK,EAAIT,KAAM;QACfU,QAAQ,EAAIC,CAAC,IAAKV,QAAQ,CAACU,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAjC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC,eACFZ,OAAA;QAAQwB,EAAE,EAAG,wBAAwB;QAACe,IAAI,EAAG,QAAQ;QAAA/B,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE,CAAC,eACPZ,OAAA,CAAC2B,iBAAiB;MAAAlB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEV;AAACoB,GAAA,CA1BQF,UAAU;AAAAgB,GAAA,GAAVhB,UAAU;AA4BnB,SAASiB,gBAAgBA,CAAC;EAAEzC;AAAK,CAAC,EAAC;EACjC,oBACEN,OAAA;IAAIwB,EAAE,EAAG,YAAY;IAAAhB,QAAA,EAAGF;EAAI;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAGvC;AAACoC,GAAA,GALQD,gBAAgB;AAOzB,SAASE,WAAWA,CAAA,EAAG;EAAAC,GAAA;EAErB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGvD,QAAQ,CAACI,mBAAmB,CAAC;;EAErD;EACA,MAAMoD,WAAW,GAAG,MAAOC,OAAO,IAAK;IAErC;IACA,MAAMC,WAAW,GAAG,CAAC,GAAGJ,IAAI,EAAE;MAAE,IAAI,EAAEA,IAAI,CAACK,MAAM,GAAG,CAAC;MAAE,MAAM,EAAE,MAAM;MAAE,SAAS,EAAEF;IAAQ,CAAC,CAAC;IAC5FF,OAAO,CAACG,WAAW,CAAC;;IAEpB;IACA;IACA,IAAI;MACJ,MAAME,eAAe,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;QACpEC,MAAM,EAAE,MAAM;QAAE;QAChBC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,SAAS,EAAET;QAAY,CAAC,CAAC,CAAE;MACpD,CAAC,CAAC;;MAEF;MACA,MAAMU,IAAI,GAAG,MAAMR,eAAe,CAACS,IAAI,CAAC,CAAC;;MAEzC;MACAd,OAAO,CAAC,CAAC,GAAGG,WAAW,EAAE;QAAE,MAAM,EAAC,WAAW;QAAE,SAAS,EAAEU,IAAI,CAACE;MAAM,CAAC,CAAC,CAAC;IAC1E,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACA,CAAC;;EAGD;EACA,oBACEpE,OAAA;IAAKwB,EAAE,EAAG,cAAc;IAAAhB,QAAA,gBACtBR,OAAA,CAAC+C,gBAAgB;MAACzC,IAAI,EAAI;IAAY;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzCZ,OAAA,CAACc,QAAQ;MAACC,QAAQ,EAAIoC;IAAK;MAAA1C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9BZ,OAAA,CAAC8B,UAAU;MAACC,aAAa,EAAIsB;IAAY;MAAA5C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEzC,CAAC;AAEV;AAACsC,GAAA,CA1CQD,WAAW;AAAAqB,GAAA,GAAXrB,WAAW;AA4CpB,eAAe,SAASsB,GAAGA,CAAA,EAAG;EAC5B,oBAAOvE,OAAA,CAACiD,WAAW;IAAAxC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACxB;AAAC4D,GAAA,GAFuBD,GAAG;AAAA,IAAA1D,EAAA,EAAAa,GAAA,EAAAG,GAAA,EAAAiB,GAAA,EAAAE,GAAA,EAAAsB,GAAA,EAAAE,GAAA;AAAAC,YAAA,CAAA5D,EAAA;AAAA4D,YAAA,CAAA/C,GAAA;AAAA+C,YAAA,CAAA5C,GAAA;AAAA4C,YAAA,CAAA3B,GAAA;AAAA2B,YAAA,CAAAzB,GAAA;AAAAyB,YAAA,CAAAH,GAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}