{"ast":null,"code":"import React,{useRef,useState,useEffect}from'react';import OpenAI from\"openai\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const openai=new OpenAI({apiKey:'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',dangerouslyAllowBrowser:true});const initialMessagesList=[{content:\"Hi! I am a friendly AI-generated chatbot. Whatcha wanna talk about?\",name:\"Chatbot\"}];function Message(_ref){let{content,name}=_ref;return/*#__PURE__*/_jsxs(\"li\",{id:\"message\",children:[content,\" \",/*#__PURE__*/_jsx(\"span\",{id:\"message-sender\",children:name})]});}function Messages(_ref2){let{messages}=_ref2;const messagesEndRef=useRef(null);// reference val not needed for rendering\nuseEffect(()=>{var _messagesEndRef$curre;// makes messageEndRef div scroll into view when messages (dependency) is updated\n(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView();},[messages]);return/*#__PURE__*/_jsxs(\"ul\",{id:\"messages\",children:[messages.map((msg,index)=>/*#__PURE__*/_jsx(Message,{content:msg.content,name:msg.name},index)),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]});}function MessageBar(_ref3){let{onSendMessage}=_ref3;const[input,setInput]=useState('');const handleSubmit=event=>{event.preventDefault();onSendMessage(input);setInput('');};return/*#__PURE__*/_jsxs(\"form\",{id:\"messageBar\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{id:\"messageBar-text\",type:\"text\",placeholder:\"Enter Message here...\",autoComplete:\"off\",value:input,onChange:e=>setInput(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{id:\"messageBar-send-button\",type:\"submit\",children:\"Send\"})]});}function RoomName(_ref4){let{name}=_ref4;return/*#__PURE__*/_jsx(\"p\",{children:name});}function RoomsList(_ref5){let{rooms}=_ref5;const rows=[];rooms.forEach(room=>{rows.push(/*#__PURE__*/_jsx(RoomName,{name:room.name}));});return/*#__PURE__*/_jsx(\"ul\",{children:rows});}const ROOMS=[{name:\"fun\"},{name:\"yoga\"}];function CurrentRoomTitle(_ref6){let{name}=_ref6;return/*#__PURE__*/_jsx(\"h1\",{id:\"room-title\",children:name});}function CurrentRoom(){const[messages,setMessages]=useState(initialMessagesList);const handleSendMessage=newMessage=>{setMessages([...messages,{content:newMessage,name:'User'}]);};return/*#__PURE__*/_jsxs(\"div\",{id:\"current-room\",children:[/*#__PURE__*/_jsx(CurrentRoomTitle,{name:\"Welcome to Chat Room\"}),/*#__PURE__*/_jsx(Messages,{messages:messages}),/*#__PURE__*/_jsx(MessageBar,{onSendMessage:handleSendMessage})]});}async function main(){const completion=await openai.chat.completions.create({messages:[{role:\"system\",content:\"You are a helpful assistant.\"}],model:\"gpt-3.5-turbo\"});console.log(completion.choices[0]);}export default function App(){//main();\nreturn/*#__PURE__*/_jsx(CurrentRoom,{});}","map":{"version":3,"names":["React","useRef","useState","useEffect","OpenAI","jsx","_jsx","jsxs","_jsxs","openai","apiKey","dangerouslyAllowBrowser","initialMessagesList","content","name","Message","_ref","id","children","Messages","_ref2","messages","messagesEndRef","_messagesEndRef$curre","current","scrollIntoView","map","msg","index","ref","MessageBar","_ref3","onSendMessage","input","setInput","handleSubmit","event","preventDefault","onSubmit","type","placeholder","autoComplete","value","onChange","e","target","RoomName","_ref4","RoomsList","_ref5","rooms","rows","forEach","room","push","ROOMS","CurrentRoomTitle","_ref6","CurrentRoom","setMessages","handleSendMessage","newMessage","main","completion","chat","completions","create","role","model","console","log","choices","App"],"sources":["C:/Users/Annabel/chat-app/chat/src/App.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport OpenAI from \"openai\";\n\nconst openai = new OpenAI({ apiKey: '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', dangerouslyAllowBrowser: true });\n\nconst initialMessagesList = [\n  {content: \"Hi! I am a friendly AI-generated chatbot. Whatcha wanna talk about?\", name: \"Chatbot\"},\n];\n\nfunction Message( { content, name } ) {\n  return(\n    <li id = \"message\">{content} <span id = \"message-sender\">{name}</span></li>\n  );\n}\n\nfunction Messages({ messages }) {\n  const messagesEndRef = useRef(null); // reference val not needed for rendering\n\n  useEffect(() => {\n    // makes messageEndRef div scroll into view when messages (dependency) is updated\n    messagesEndRef.current?.scrollIntoView();\n  }, [messages]);\n\n  return(\n    <ul id = \"messages\">\n      {messages.map((msg, index) => (\n        <Message key = {index} content = {msg.content} name = {msg.name} />\n      ))}\n\n      <div ref = {messagesEndRef} />\n    </ul>\n  );\n}\n\nfunction MessageBar({ onSendMessage }) {\n  const [input, setInput] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    onSendMessage(input);\n    setInput('');\n  };\n\n  return(\n    <form id = \"messageBar\" onSubmit = {handleSubmit}>\n      <input id = \"messageBar-text\"\n        type = \"text\"  \n        placeholder = \n        \"Enter Message here...\"\n        autoComplete=\"off\"\n        value = {input}\n        onChange ={(e) => setInput(e.target.value)}\n        />\n        <button id = \"messageBar-send-button\" type = \"submit\">Send</button>\n    </form>\n  );\n}\n\nfunction RoomName({name}){\n  return(\n    <p>{name}</p>\n  );\n}\n\nfunction RoomsList({ rooms }){\n  const rows = [];\n\n  rooms.forEach((room) => {\n    rows.push(\n      <RoomName name = {room.name} />\n    );\n  });\n\n  return(\n    <ul>\n      {rows}\n    </ul>\n  );\n}\n\nconst ROOMS = [\n  {name: \"fun\"},\n  {name: \"yoga\"}\n];\n\nfunction CurrentRoomTitle({ name }){\n  return(\n    <h1 id = \"room-title\">{ name }</h1>\n  );\n  \n}\n\nfunction CurrentRoom() {\n  const [messages, setMessages] = useState(initialMessagesList);\n\n  const handleSendMessage = (newMessage) => {\n    setMessages([...messages, { content: newMessage, name: 'User'}]);\n  };\n\n  return (\n    <div id = \"current-room\">\n      <CurrentRoomTitle name = {\"Welcome to Chat Room\"} />\n      <Messages messages = {messages} />\n      <MessageBar onSendMessage = {handleSendMessage} />\n\n    </div>\n  );\n}\n\nasync function main() {\n  const completion = await openai.chat.completions.create({\n    messages: [{ role: \"system\", content: \"You are a helpful assistant.\" }],\n    model: \"gpt-3.5-turbo\",\n  });\n\n  console.log(completion.choices[0]);\n}\n\nexport default function App() {\n  //main();\n  return <CurrentRoom />;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}