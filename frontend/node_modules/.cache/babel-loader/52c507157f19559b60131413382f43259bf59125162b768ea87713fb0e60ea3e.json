{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Annabel\\\\chat-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialMessagesList = [{\n  \"role\": \"system\",\n  \"content\": \"You are a friendly Norwegian who speaks A1 Norwegian. Your goal is to help the user improve their Norwegian and keep the conversation going. Repeat words already used in the chat as much as possible.\"\n}, {\n  \"role\": \"assistant\",\n  \"content\": \"Hei! Jeg er en vennlig AI-generert språklærer. Hva ønsker du å snakke om?\"\n}];\nconst username = 'User';\nconst botname = 'Moby';\nfunction SpecialCharacters() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"special-characters-keyboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"char-key\",\n      children: \"\\xE6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"char-key\",\n      children: \"\\xF8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"char-key\",\n      children: \"\\xE5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"char-key\",\n      children: \"\\xC6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"char-key\",\n      children: \"\\xD8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"char-key\",\n      children: \"\\xC5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_c = SpecialCharacters;\n;\nfunction Message({\n  content,\n  name\n}) {\n  _s();\n  // hovering behavior\n  const [isHovered, setIsHovered] = useState(false);\n  const handleMouseEnter = () => {\n    setIsHovered(true);\n  };\n  const handleMouseLeave = () => {\n    setIsHovered(false);\n  };\n  const textColor = isHovered ? 'blue' : 'red';\n  const cursor = isHovered ? 'pointer' : 'auto';\n\n  // clicking behavior\n\n  const [isTranslationVisible, setIsTranslationVisible] = useState(false);\n  const transRef = useRef();\n  const toggleTranslationBox = () => {\n    setIsTranslationVisible(!isTranslationVisible);\n  };\n  const TranslationBox = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: transRef,\n    style: {\n      border: '1px solid black',\n      padding: '10px',\n      position: 'absolute',\n      backgroundColor: 'white',\n      zIndex: 100\n    },\n    children: \"Here is the translation!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n  const handleClick = event => {\n    if (transRef.current && !transRef.current.contains(event.target)) {\n      setIsTranslationVisible(false);\n    }\n  };\n  useEffect(() => {\n    // listen for a click if translation box is open\n    if (isTranslationVisible) {\n      document.addEventListener('click', handleClick, true);\n    }\n\n    // otherwise, there should be no event listener\n    return () => {\n      document.removeEventListener('click', handleClick, true);\n    };\n  }, [isTranslationVisible]);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"message\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"message-sender\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: textColor,\n        cursor: cursor\n      },\n      onMouseEnter: handleMouseEnter,\n      onMouseLeave: handleMouseLeave,\n      onClick: toggleTranslationBox,\n      children: [\" \", content]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), isTranslationVisible && /*#__PURE__*/_jsxDEV(TranslationBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(Message, \"uw+Jik9KwRMIr9ilNtXMwgCklmg=\");\n_c2 = Message;\nfunction Messages({\n  messages\n}) {\n  _s2();\n  const messagesEndRef = useRef(null); // reference val not needed for rendering\n\n  // pin scroll to bottom\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView();\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"messages\",\n    children: [messages.map(msg => msg.role !== \"system\" && /*#__PURE__*/_jsxDEV(Message, {\n      content: msg.content,\n      name: msg.role === 'user' ? username : botname\n    }, msg.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 34\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: messagesEndRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s2(Messages, \"0epSoi03NVSoD0I0FiLK4iVNXOA=\");\n_c3 = Messages;\nfunction MessageBar({\n  onSendMessage\n}) {\n  _s3();\n  const [input, setInput] = useState('');\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSendMessage(input);\n    setInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"messageBar\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"messageBar-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"messageBar-text\",\n        type: \"text\",\n        placeholder: \"Enter Message here...\",\n        autoComplete: \"off\",\n        value: input,\n        onChange: e => setInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"messageBar-send-button\",\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SpecialCharacters, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n_s3(MessageBar, \"WVveI0ACa0LqOSOlGzu58xcz+KE=\");\n_c4 = MessageBar;\nfunction CurrentRoomTitle({\n  name\n}) {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    id: \"room-title\",\n    children: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n}\n_c5 = CurrentRoomTitle;\nfunction CurrentRoom() {\n  _s4();\n  const [chat, setChat] = useState(initialMessagesList);\n\n  // JSON REQUEST TO BACKEND\n  const sendMessage = async message => {\n    // add message to chat\n    const updatedChat = [...chat, {\n      \"role\": \"user\",\n      \"content\": message\n    }];\n    setChat(updatedChat);\n\n    // get chatbot response from django server\n    // message = user input from input field, set where return is\n    const server_response = await fetch('http://localhost:8000/api/chatbot/', {\n      method: 'POST',\n      // sending data to server\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        chatsofar: updatedChat\n      }) // can only send JSON\n    });\n\n    // django response is parsed as JSON, and is now a useful JavaScript object?\n    const data = await server_response.json();\n\n    // add resopnse to chat\n    setChat([...updatedChat, {\n      \"role\": \"assistant\",\n      \"content\": data.reply\n    }]);\n  };\n\n  // putting all components together\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"current-room\",\n    children: [/*#__PURE__*/_jsxDEV(CurrentRoomTitle, {\n      name: \"Norsk Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Messages, {\n      messages: chat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageBar, {\n      onSendMessage: sendMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n}\n_s4(CurrentRoom, \"zD6e7F0uZJrCY/Uk1WTRFAhsfpg=\");\n_c6 = CurrentRoom;\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(CurrentRoom, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 10\n  }, this);\n}\n_c7 = App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"SpecialCharacters\");\n$RefreshReg$(_c2, \"Message\");\n$RefreshReg$(_c3, \"Messages\");\n$RefreshReg$(_c4, \"MessageBar\");\n$RefreshReg$(_c5, \"CurrentRoomTitle\");\n$RefreshReg$(_c6, \"CurrentRoom\");\n$RefreshReg$(_c7, \"App\");","map":{"version":3,"names":["React","useRef","useState","useEffect","jsxDEV","_jsxDEV","initialMessagesList","username","botname","SpecialCharacters","id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","Message","content","name","_s","isHovered","setIsHovered","handleMouseEnter","handleMouseLeave","textColor","cursor","isTranslationVisible","setIsTranslationVisible","transRef","toggleTranslationBox","TranslationBox","ref","style","border","padding","position","backgroundColor","zIndex","handleClick","event","current","contains","target","document","addEventListener","removeEventListener","color","onMouseEnter","onMouseLeave","onClick","_c2","Messages","messages","_s2","messagesEndRef","_messagesEndRef$curre","scrollIntoView","map","msg","role","_c3","MessageBar","onSendMessage","_s3","input","setInput","handleSubmit","preventDefault","onSubmit","type","placeholder","autoComplete","value","onChange","e","_c4","CurrentRoomTitle","_c5","CurrentRoom","_s4","chat","setChat","sendMessage","message","updatedChat","server_response","fetch","method","headers","body","JSON","stringify","chatsofar","data","json","reply","_c6","App","_c7","$RefreshReg$"],"sources":["C:/Users/Annabel/chat-app/frontend/src/App.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\n\nconst initialMessagesList = [\n  { \"role\":\"system\", \"content\": \"You are a friendly Norwegian who speaks A1 Norwegian. Your goal is to help the user improve their Norwegian and keep the conversation going. Repeat words already used in the chat as much as possible.\" },\n  { \"role\": \"assistant\", \"content\":\"Hei! Jeg er en vennlig AI-generert språklærer. Hva ønsker du å snakke om?\" },\n];\n\nconst username = 'User';\nconst botname = 'Moby';\n\nfunction SpecialCharacters() {\n\n  return(\n    <div id = \"special-characters-keyboard\">\n      <button className = \"char-key\">&#xE6;</button>\n      <button className = \"char-key\">&#248;</button>\n      <button className = \"char-key\">&#229;</button>\n      <button className = \"char-key\">&#198;</button>\n      <button className = \"char-key\">&#216;</button>\n      <button className = \"char-key\">&#197;</button>\n    </div>\n  );\n};\n\n\n\n\nfunction Message({ content, name }) {\n\n  // hovering behavior\n  const [isHovered, setIsHovered] = useState(false); \n\n  const handleMouseEnter = () => {\n    setIsHovered(true);\n  };\n\n  const handleMouseLeave = () => {\n    setIsHovered(false);\n  };\n\n  const textColor = isHovered ? 'blue':'red';\n  const cursor = isHovered? 'pointer': 'auto';\n\n  // clicking behavior\n\n  const [isTranslationVisible, setIsTranslationVisible] = useState(false);\n  const transRef = useRef();\n\n  const toggleTranslationBox = () => {\n    setIsTranslationVisible(!isTranslationVisible);\n  };\n\n  const TranslationBox = () => (\n    <div ref={transRef} style={{ border: '1px solid black', padding: '10px', position: 'absolute', backgroundColor: 'white', zIndex: 100 }}>\n      Here is the translation!\n    </div>\n  );\n\n  const handleClick = (event) => {\n    if (transRef.current && !transRef.current.contains(event.target)) {\n      setIsTranslationVisible(false);\n    }\n  };\n\n  useEffect(() => {\n    // listen for a click if translation box is open\n    if (isTranslationVisible) {\n      document.addEventListener('click', handleClick,true);\n    }\n\n    // otherwise, there should be no event listener\n    return () => {\n      document.removeEventListener('click', handleClick, true)\n    };\n\n  }, [isTranslationVisible]);\n\n\n  return(\n    <li className = \"message\">\n      <span className = \"message-sender\">{name}</span>\n      <span style={{color:textColor, cursor:cursor}} onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave} onClick={toggleTranslationBox}> {content}</span>\n      {isTranslationVisible && <TranslationBox />}\n    </li>\n  );\n}\n\nfunction Messages({ messages }) {\n  const messagesEndRef = useRef(null); // reference val not needed for rendering\n\n  // pin scroll to bottom\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView();\n  }, [messages]);\n\n  return(\n    <ul className = \"messages\">\n\n      {/* Each message contains a 'role'\n          Handles 'user', 'system', and 'assistant' roles,\n          assigning them to their proper names\n      */}\n\n      {messages.map((msg) => (\n          msg.role!==\"system\" && <Message key = {msg.id} content = {msg.content} name = {msg.role === 'user' ? username: botname} />\n      ))}\n      <div ref = {messagesEndRef} />\n    </ul>\n  );\n}\n\nfunction MessageBar({ onSendMessage }) {\n  const [input, setInput] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    onSendMessage(input);\n    setInput('');\n\n  };\n\n  return(\n    <div id = \"messageBar\">\n      <form id = \"messageBar-form\" onSubmit = { handleSubmit }>\n        <input id = \"messageBar-text\"\n          type = \"text\"  \n          placeholder = \n          \"Enter Message here...\"\n          autoComplete=\"off\"\n          value = {input}\n          onChange ={(e) => setInput(e.target.value)}\n          />\n          <button id = \"messageBar-send-button\" type = \"submit\">Send</button>\n      </form>\n      <SpecialCharacters />\n    </div>\n  );\n}\n\nfunction CurrentRoomTitle({ name }){\n  return(\n    <h1 id = \"room-title\">{ name }</h1>\n  );\n  \n}\n\nfunction CurrentRoom() {\n\n  const [chat, setChat] = useState(initialMessagesList);\n\n  // JSON REQUEST TO BACKEND\n  const sendMessage = async (message) => {\n\n    // add message to chat\n    const updatedChat = [...chat, { \"role\": \"user\", \"content\": message }];\n    setChat(updatedChat);\n\n    // get chatbot response from django server\n    // message = user input from input field, set where return is\n    const server_response = await fetch('http://localhost:8000/api/chatbot/', {\n      method: 'POST', // sending data to server\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ chatsofar: updatedChat }), // can only send JSON\n    });\n\n    // django response is parsed as JSON, and is now a useful JavaScript object?\n    const data = await server_response.json();\n\n    // add resopnse to chat\n    setChat([...updatedChat, { \"role\":\"assistant\", \"content\": data.reply }]);\n\n  };\n\n  // putting all components together\n  return (\n    <div id = \"current-room\">\n      <CurrentRoomTitle name = {\"Norsk Chat\"} />\n      <Messages messages = {chat} />\n      <MessageBar onSendMessage = {sendMessage} />\n\n    </div>\n  );\n}\n\nexport default function App() {\n  return <CurrentRoom />;\n}"],"mappings":";;;;;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,mBAAmB,GAAG,CAC1B;EAAE,MAAM,EAAC,QAAQ;EAAE,SAAS,EAAE;AAA0M,CAAC,EACzO;EAAE,MAAM,EAAE,WAAW;EAAE,SAAS,EAAC;AAA4E,CAAC,CAC/G;AAED,MAAMC,QAAQ,GAAG,MAAM;AACvB,MAAMC,OAAO,GAAG,MAAM;AAEtB,SAASC,iBAAiBA,CAAA,EAAG;EAE3B,oBACEJ,OAAA;IAAKK,EAAE,EAAG,6BAA6B;IAAAC,QAAA,gBACrCN,OAAA;MAAQO,SAAS,EAAG,UAAU;MAAAD,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9CX,OAAA;MAAQO,SAAS,EAAG,UAAU;MAAAD,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9CX,OAAA;MAAQO,SAAS,EAAG,UAAU;MAAAD,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9CX,OAAA;MAAQO,SAAS,EAAG,UAAU;MAAAD,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9CX,OAAA;MAAQO,SAAS,EAAG,UAAU;MAAAD,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9CX,OAAA;MAAQO,SAAS,EAAG,UAAU;MAAAD,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV;AAACC,EAAA,GAZQR,iBAAiB;AAYzB;AAKD,SAASS,OAAOA,CAAC;EAAEC,OAAO;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EAElC;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMsB,gBAAgB,GAAGA,CAAA,KAAM;IAC7BD,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAME,gBAAgB,GAAGA,CAAA,KAAM;IAC7BF,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAMG,SAAS,GAAGJ,SAAS,GAAG,MAAM,GAAC,KAAK;EAC1C,MAAMK,MAAM,GAAGL,SAAS,GAAE,SAAS,GAAE,MAAM;;EAE3C;;EAEA,MAAM,CAACM,oBAAoB,EAAEC,uBAAuB,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EACvE,MAAM4B,QAAQ,GAAG7B,MAAM,CAAC,CAAC;EAEzB,MAAM8B,oBAAoB,GAAGA,CAAA,KAAM;IACjCF,uBAAuB,CAAC,CAACD,oBAAoB,CAAC;EAChD,CAAC;EAED,MAAMI,cAAc,GAAGA,CAAA,kBACrB3B,OAAA;IAAK4B,GAAG,EAAEH,QAAS;IAACI,KAAK,EAAE;MAAEC,MAAM,EAAE,iBAAiB;MAAEC,OAAO,EAAE,MAAM;MAAEC,QAAQ,EAAE,UAAU;MAAEC,eAAe,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAI,CAAE;IAAA5B,QAAA,EAAC;EAExI;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CACN;EAED,MAAMwB,WAAW,GAAIC,KAAK,IAAK;IAC7B,IAAIX,QAAQ,CAACY,OAAO,IAAI,CAACZ,QAAQ,CAACY,OAAO,CAACC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAAC,EAAE;MAChEf,uBAAuB,CAAC,KAAK,CAAC;IAChC;EACF,CAAC;EAED1B,SAAS,CAAC,MAAM;IACd;IACA,IAAIyB,oBAAoB,EAAE;MACxBiB,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAEN,WAAW,EAAC,IAAI,CAAC;IACtD;;IAEA;IACA,OAAO,MAAM;MACXK,QAAQ,CAACE,mBAAmB,CAAC,OAAO,EAAEP,WAAW,EAAE,IAAI,CAAC;IAC1D,CAAC;EAEH,CAAC,EAAE,CAACZ,oBAAoB,CAAC,CAAC;EAG1B,oBACEvB,OAAA;IAAIO,SAAS,EAAG,SAAS;IAAAD,QAAA,gBACvBN,OAAA;MAAMO,SAAS,EAAG,gBAAgB;MAAAD,QAAA,EAAES;IAAI;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAChDX,OAAA;MAAM6B,KAAK,EAAE;QAACc,KAAK,EAACtB,SAAS;QAAEC,MAAM,EAACA;MAAM,CAAE;MAACsB,YAAY,EAAEzB,gBAAiB;MAAC0B,YAAY,EAAEzB,gBAAiB;MAAC0B,OAAO,EAAEpB,oBAAqB;MAAApB,QAAA,GAAC,GAAC,EAACQ,OAAO;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,EAC9JY,oBAAoB,iBAAIvB,OAAA,CAAC2B,cAAc;MAAAnB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAET;AAACK,EAAA,CA1DQH,OAAO;AAAAkC,GAAA,GAAPlC,OAAO;AA4DhB,SAASmC,QAAQA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,GAAA;EAC9B,MAAMC,cAAc,GAAGvD,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;EAErC;EACAE,SAAS,CAAC,MAAM;IAAA,IAAAsD,qBAAA;IACd,CAAAA,qBAAA,GAAAD,cAAc,CAACd,OAAO,cAAAe,qBAAA,uBAAtBA,qBAAA,CAAwBC,cAAc,CAAC,CAAC;EAC1C,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EAEd,oBACEjD,OAAA;IAAIO,SAAS,EAAG,UAAU;IAAAD,QAAA,GAOvB2C,QAAQ,CAACK,GAAG,CAAEC,GAAG,IACdA,GAAG,CAACC,IAAI,KAAG,QAAQ,iBAAIxD,OAAA,CAACa,OAAO;MAAgBC,OAAO,EAAIyC,GAAG,CAACzC,OAAQ;MAACC,IAAI,EAAIwC,GAAG,CAACC,IAAI,KAAK,MAAM,GAAGtD,QAAQ,GAAEC;IAAQ,GAAhFoD,GAAG,CAAClD,EAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA4E,CAC5H,CAAC,eACFX,OAAA;MAAK4B,GAAG,EAAIuB;IAAe;MAAA3C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAET;AAACuC,GAAA,CAtBQF,QAAQ;AAAAS,GAAA,GAART,QAAQ;AAwBjB,SAASU,UAAUA,CAAC;EAAEC;AAAc,CAAC,EAAE;EAAAC,GAAA;EACrC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGjE,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMkE,YAAY,GAAI3B,KAAK,IAAK;IAC9BA,KAAK,CAAC4B,cAAc,CAAC,CAAC;IACtBL,aAAa,CAACE,KAAK,CAAC;IACpBC,QAAQ,CAAC,EAAE,CAAC;EAEd,CAAC;EAED,oBACE9D,OAAA;IAAKK,EAAE,EAAG,YAAY;IAAAC,QAAA,gBACpBN,OAAA;MAAMK,EAAE,EAAG,iBAAiB;MAAC4D,QAAQ,EAAKF,YAAc;MAAAzD,QAAA,gBACtDN,OAAA;QAAOK,EAAE,EAAG,iBAAiB;QAC3B6D,IAAI,EAAG,MAAM;QACbC,WAAW,EACX,uBAAuB;QACvBC,YAAY,EAAC,KAAK;QAClBC,KAAK,EAAIR,KAAM;QACfS,QAAQ,EAAIC,CAAC,IAAKT,QAAQ,CAACS,CAAC,CAAChC,MAAM,CAAC8B,KAAK;MAAE;QAAA7D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC,eACFX,OAAA;QAAQK,EAAE,EAAG,wBAAwB;QAAC6D,IAAI,EAAG,QAAQ;QAAA5D,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE,CAAC,eACPX,OAAA,CAACI,iBAAiB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEV;AAACiD,GAAA,CA1BQF,UAAU;AAAAc,GAAA,GAAVd,UAAU;AA4BnB,SAASe,gBAAgBA,CAAC;EAAE1D;AAAK,CAAC,EAAC;EACjC,oBACEf,OAAA;IAAIK,EAAE,EAAG,YAAY;IAAAC,QAAA,EAAGS;EAAI;IAAAP,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAGvC;AAAC+D,GAAA,GALQD,gBAAgB;AAOzB,SAASE,WAAWA,CAAA,EAAG;EAAAC,GAAA;EAErB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGjF,QAAQ,CAACI,mBAAmB,CAAC;;EAErD;EACA,MAAM8E,WAAW,GAAG,MAAOC,OAAO,IAAK;IAErC;IACA,MAAMC,WAAW,GAAG,CAAC,GAAGJ,IAAI,EAAE;MAAE,MAAM,EAAE,MAAM;MAAE,SAAS,EAAEG;IAAQ,CAAC,CAAC;IACrEF,OAAO,CAACG,WAAW,CAAC;;IAEpB;IACA;IACA,MAAMC,eAAe,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;MACxEC,MAAM,EAAE,MAAM;MAAE;MAChBC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,SAAS,EAAER;MAAY,CAAC,CAAC,CAAE;IACpD,CAAC,CAAC;;IAEF;IACA,MAAMS,IAAI,GAAG,MAAMR,eAAe,CAACS,IAAI,CAAC,CAAC;;IAEzC;IACAb,OAAO,CAAC,CAAC,GAAGG,WAAW,EAAE;MAAE,MAAM,EAAC,WAAW;MAAE,SAAS,EAAES,IAAI,CAACE;IAAM,CAAC,CAAC,CAAC;EAE1E,CAAC;;EAED;EACA,oBACE5F,OAAA;IAAKK,EAAE,EAAG,cAAc;IAAAC,QAAA,gBACtBN,OAAA,CAACyE,gBAAgB;MAAC1D,IAAI,EAAI;IAAa;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1CX,OAAA,CAACgD,QAAQ;MAACC,QAAQ,EAAI4B;IAAK;MAAArE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9BX,OAAA,CAAC0D,UAAU;MAACC,aAAa,EAAIoB;IAAY;MAAAvE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEzC,CAAC;AAEV;AAACiE,GAAA,CAtCQD,WAAW;AAAAkB,GAAA,GAAXlB,WAAW;AAwCpB,eAAe,SAASmB,GAAGA,CAAA,EAAG;EAC5B,oBAAO9F,OAAA,CAAC2E,WAAW;IAAAnE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACxB;AAACoF,GAAA,GAFuBD,GAAG;AAAA,IAAAlF,EAAA,EAAAmC,GAAA,EAAAU,GAAA,EAAAe,GAAA,EAAAE,GAAA,EAAAmB,GAAA,EAAAE,GAAA;AAAAC,YAAA,CAAApF,EAAA;AAAAoF,YAAA,CAAAjD,GAAA;AAAAiD,YAAA,CAAAvC,GAAA;AAAAuC,YAAA,CAAAxB,GAAA;AAAAwB,YAAA,CAAAtB,GAAA;AAAAsB,YAAA,CAAAH,GAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}