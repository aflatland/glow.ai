{"ast":null,"code":"// google cloud server\nconst API_BASE_URL = \"http://127.0.0.1:8000\";\n\n// translates text from norwegian to english \nasync function translateText(text) {\n  try {\n    // passes text to server with translator\n    const botTranslation = await fetch(`${API_BASE_URL}/api/chatbot/translator`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        textToTranslate: text\n      })\n    });\n\n    // extract translated text\n    const translationJson = await botTranslation.json();\n    return translationJson.translation;\n  } catch (error) {\n    console.error(\"Error translating text:\", error); // handle error\n  }\n}\n\n// \nasync function botResponse(chat) {\n  // get chatbot response from django server\n  // message = user input from input field, set where return is\n  const server_response = await fetch(`${API_BASE_URL} /api/chatbot/`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      chatsofar: chat\n    }) // can only send JSON\n  });\n\n  // django response is parsed as JSON, and is now a useful JavaScript object?\n  const data = await server_response.json();\n\n  // add resopnse to chat\n  return {\n    \"role\": \"assistant\",\n    \"content\": data.reply\n  };\n}\nexport { translateText, botResponse };","map":{"version":3,"names":["API_BASE_URL","translateText","text","botTranslation","fetch","method","headers","body","JSON","stringify","textToTranslate","translationJson","json","translation","error","console","botResponse","chat","server_response","chatsofar","data","reply"],"sources":["C:/Users/Annabel/chat-app/frontend/src/apiService.js"],"sourcesContent":["// google cloud server\r\nconst API_BASE_URL = \"http://127.0.0.1:8000\";\r\n\r\n// translates text from norwegian to english \r\nasync function translateText(text) {\r\n    try {\r\n      // passes text to server with translator\r\n      const botTranslation = await fetch(`${API_BASE_URL}/api/chatbot/translator`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ textToTranslate: text }),\r\n      });\r\n\r\n      // extract translated text\r\n      const translationJson = await botTranslation.json();\r\n      return translationJson.translation;\r\n\r\n    } catch (error) {\r\n      console.error(\"Error translating text:\", error); // handle error\r\n    }\r\n  }\r\n\r\n\r\n  // \r\n async function botResponse(chat) {\r\n\r\n    // get chatbot response from django server\r\n    // message = user input from input field, set where return is\r\n    const server_response = await fetch(`${API_BASE_URL} /api/chatbot/`, {\r\n      method: 'POST', \r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ chatsofar: chat }), // can only send JSON\r\n    });\r\n\r\n    // django response is parsed as JSON, and is now a useful JavaScript object?\r\n    const data = await server_response.json();\r\n\r\n    // add resopnse to chat\r\n    return { \"role\":\"assistant\", \"content\": data.reply };\r\n\r\n  }\r\n\r\n  export { translateText, botResponse };"],"mappings":"AAAA;AACA,MAAMA,YAAY,GAAG,uBAAuB;;AAE5C;AACA,eAAeC,aAAaA,CAACC,IAAI,EAAE;EAC/B,IAAI;IACF;IACA,MAAMC,cAAc,GAAG,MAAMC,KAAK,CAAE,GAAEJ,YAAa,yBAAwB,EAAE;MAC3EK,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,eAAe,EAAER;MAAK,CAAC;IAChD,CAAC,CAAC;;IAEF;IACA,MAAMS,eAAe,GAAG,MAAMR,cAAc,CAACS,IAAI,CAAC,CAAC;IACnD,OAAOD,eAAe,CAACE,WAAW;EAEpC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC,CAAC,CAAC;EACnD;AACF;;AAGA;AACD,eAAeE,WAAWA,CAACC,IAAI,EAAE;EAE9B;EACA;EACA,MAAMC,eAAe,GAAG,MAAMd,KAAK,CAAE,GAAEJ,YAAa,gBAAe,EAAE;IACnEK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEU,SAAS,EAAEF;IAAK,CAAC,CAAC,CAAE;EAC7C,CAAC,CAAC;;EAEF;EACA,MAAMG,IAAI,GAAG,MAAMF,eAAe,CAACN,IAAI,CAAC,CAAC;;EAEzC;EACA,OAAO;IAAE,MAAM,EAAC,WAAW;IAAE,SAAS,EAAEQ,IAAI,CAACC;EAAM,CAAC;AAEtD;AAEA,SAASpB,aAAa,EAAEe,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}