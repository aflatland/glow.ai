{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Annabel\\\\chat-app\\\\frontend\\\\src\\\\components\\\\Message.jsx\",\n  _s = $RefreshSig$();\nimport { useState, memo, useEffect } from 'react';\nimport { translateText } from '../utils/translateText.js';\nimport { sayHello } from '../utils/sayHello.js';\nimport { correctText } from '../utils/correctText.js';\n\n// handles translate\n// memoization prevents renders of messages that haven't changed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Message = /*#__PURE__*/_s( /*#__PURE__*/memo(_c = _s(({\n  content,\n  name\n}) => {\n  _s();\n  // state controlling translation visibility\n  const [isTranslatedMessageVisible, setIsTranslatedMessageVisible] = useState(false);\n\n  // state for storing translated text\n  const [translatedMessage, setTranslatedMessage] = useState(\" . . .\");\n\n  // state for checking if text has been translated\n  const [messageIsTranslated, setMessageIsTranslated] = useState(false);\n\n  // state for storing corrected text\n  const [correctedMessage, setCorrectedMessage] = useState(\" . . .\");\n\n  // state for storing corrected text\n  const [isCorrectedMessageVisible, setIsCorrectedMessageVisible] = useState(\" . . .\");\n\n  // handle message click event\n  const handleMessageClick = async () => {\n    // toggle visibility of translated message\n    setIsTranslatedMessageVisible(prev => !prev);\n\n    // each message is translated only once\n    if (!messageIsTranslated) {\n      try {\n        const translated = await translateText(content);\n        setTranslatedMessage(translated);\n        setMessageIsTranslated(true);\n      } catch (error) {\n        console.error('Translation failed:', error);\n      }\n    }\n  };\n  const handleSayHello = async () => {\n    try {\n      sayHello(content);\n    } catch (error) {\n      console.error('Say Hello failed:', error);\n    }\n  };\n  const handleCorrection = async () => {\n    try {\n      const correction = await correctText(content);\n      setCorrectedMessage(correction);\n    } catch (error) {\n      console.error(\"Correcting text failed: \", error);\n    }\n  };\n\n  // correction created for every user message\n  useEffect(() => {\n    if (name === \"User\") {\n      handleCorrection();\n    }\n  }, []);\n\n  // render message component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex\",\n    children: [name === \"User\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"w-6 cursor-pointer\",\n        children: \"O\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \" text-[#98a0a7]\",\n        children: ['|--', \" \", correctedMessage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"w-6 cursor-pointer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"hover:bg-[#f1f6f9] pb-4\",\n      onClick: handleMessageClick,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-amber-500 block\",\n        children: [name, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: 'black',\n          cursor: 'auto'\n        },\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), isTranslatedMessageVisible && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \" text-[#98a0a7]\",\n        children: ['|--', \" \", translatedMessage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 7\n  }, this);\n}, \"pAB9kGHcMQw2HEbM6a1x8MX4jTI=\")), \"pAB9kGHcMQw2HEbM6a1x8MX4jTI=\");\n_c2 = Message;\nvar _c, _c2;\n$RefreshReg$(_c, \"Message$memo\");\n$RefreshReg$(_c2, \"Message\");","map":{"version":3,"names":["useState","memo","useEffect","translateText","sayHello","correctText","jsxDEV","_jsxDEV","Fragment","_Fragment","Message","_s","_c","content","name","isTranslatedMessageVisible","setIsTranslatedMessageVisible","translatedMessage","setTranslatedMessage","messageIsTranslated","setMessageIsTranslated","correctedMessage","setCorrectedMessage","isCorrectedMessageVisible","setIsCorrectedMessageVisible","handleMessageClick","prev","translated","error","console","handleSayHello","handleCorrection","correction","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","color","cursor","_c2","$RefreshReg$"],"sources":["C:/Users/Annabel/chat-app/frontend/src/components/Message.jsx"],"sourcesContent":["import { useState, memo, useEffect } from 'react';\r\nimport { translateText } from '../utils/translateText.js';\r\nimport { sayHello } from '../utils/sayHello.js'\r\nimport { correctText } from '../utils/correctText.js'\r\n\r\n// handles translate\r\n// memoization prevents renders of messages that haven't changed\r\nexport const Message = memo(({ content, name }) => {\r\n \r\n    // state controlling translation visibility\r\n    const [isTranslatedMessageVisible, setIsTranslatedMessageVisible] = useState(false);\r\n    \r\n    // state for storing translated text\r\n    const [translatedMessage, setTranslatedMessage] = useState(\" . . .\");\r\n    \r\n    // state for checking if text has been translated\r\n    const [messageIsTranslated, setMessageIsTranslated] = useState(false);\r\n\r\n\r\n\r\n    // state for storing corrected text\r\n    const [correctedMessage, setCorrectedMessage] = useState(\" . . .\");\r\n\r\n    // state for storing corrected text\r\n    const [isCorrectedMessageVisible, setIsCorrectedMessageVisible] = useState(\" . . .\");\r\n    \r\n  \r\n    // handle message click event\r\n    const handleMessageClick = async () => {\r\n  \r\n      // toggle visibility of translated message\r\n      setIsTranslatedMessageVisible(prev => !prev);\r\n  \r\n      // each message is translated only once\r\n      if(!messageIsTranslated) {\r\n        try {\r\n          const translated = await translateText(content);\r\n          setTranslatedMessage(translated);\r\n          setMessageIsTranslated(true);\r\n        } catch (error) {\r\n          console.error('Translation failed:', error);\r\n        }\r\n      }\r\n    };\r\n\r\n    const handleSayHello = async () => {\r\n      try {\r\n        sayHello(content);\r\n      } catch (error) {\r\n        console.error('Say Hello failed:', error);\r\n      }\r\n    }\r\n\r\n    const handleCorrection = async () => {\r\n\r\n      try {\r\n        const correction = await correctText(content);\r\n        setCorrectedMessage(correction);\r\n\r\n      } catch (error) {\r\n        console.error(\"Correcting text failed: \", error);\r\n      }\r\n    }\r\n\r\n    // correction created for every user message\r\n    useEffect(() => {\r\n      if (name === \"User\"){\r\n        handleCorrection();\r\n      }\r\n    }, []);\r\n  \r\n    \r\n    // render message component\r\n    return(\r\n      <div className = \"flex\">\r\n\r\n        {/* click to see correction */}\r\n\r\n        {name === \"User\" ? (\r\n          <>\r\n            <p className = \"w-6 cursor-pointer\">O</p>\r\n\r\n            {/* correction appears when users click on circle */}\r\n\r\n            <p className = \" text-[#98a0a7]\">\r\n              {'|--'} {correctedMessage}\r\n            </p>\r\n\r\n          </>\r\n            \r\n        ): \r\n          (<p className = \"w-6 cursor-pointer\" ></p>)\r\n        }\r\n\r\n\r\n\r\n        {/* message and possibly the translated content */}\r\n        <li className = \"hover:bg-[#f1f6f9] pb-4\" onClick={handleMessageClick}>\r\n          <span className = \"text-amber-500 block\">{name} </span>\r\n          <span style={{color:'black', cursor:'auto'}} >\r\n          {content}\r\n          </span>\r\n    \r\n          {/* translation appears when users click on message */}\r\n          {isTranslatedMessageVisible && (\r\n            <p className = \" text-[#98a0a7]\">\r\n              {'|--'} {translatedMessage}\r\n            </p>\r\n          )}\r\n\r\n        </li>\r\n      </div>\r\n    );\r\n  });"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}